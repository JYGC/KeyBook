@page "/roles"

@using Microsoft.AspNetCore.Identity;
@using KeyBook.Services

@inject RoleService RoleService
@inject IJSRuntime JsRuntime

<h1>Roles</h1>
<br />
<div class="input-group">
    <input name="roleName" @bind="newRoleName" @bind:event="oninput" class="form-control w-25">
    <span class="input-group-btn">
        <button disabled="@string.IsNullOrWhiteSpace(newRoleName)" class="btn btn-info" @onclick="AddRoles">Add New Role</button>
    </span>
</div>
<table class="table table-striped" id="roleTable">
    <thead>
        <tr>
            <th>
                Role
            </th>
            <th>
                Id
            </th>
            <th style="width:10%">
                Actions
            </th>
        </tr>
    </thead>
    <tbody>
        @if (roles != null && roles.Count > 0)
        {
            @foreach (var role in roles)
            {
                <tr>
                    <td>
                        @role.Name
                    </td>
                    <td>
                        @role.Id
                    </td>
                    <td class="text-right">
                        @if (role.Name != "SuperAdmin")
                        {
                            <div class="btn-group">
                                <div>
                                    <a class="dropdown-item">
                                        <i class="fas fa-pencil-alt"></i> Edit
                                    </a>
                                    <form class="d-inline">
                                        <a class="dropdown-item"><i class="fas fa-trash-alt"></i> Delete</a>
                                    </form>
                                    <a style='margin-right:16px' href="/permission/@role.Id" class="dropdown-item">
                                        <i class="fas fa-wrench"></i> Manage Permissions
                                    </a>
                                </div>
                            </div>
                        }
                    </td>
                </tr>
            }
        }
    </tbody>
</table>


@code {
    private List<IdentityRole>? roles;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        roles = await RoleService.GetAllRoles();
    }

    // TODO: Need to update UI when adding roles
    private string newRoleName = "";
    private async void AddRoles()
    {
        IdentityResult? result = await RoleService.AddRole(newRoleName);

        if (result == null || !result.Succeeded)
        {
            if (result != null)
            {
                Console.WriteLine(string.Join("\n", 
                    result.Errors.Select(e => $"Code: {e.Code}, Description: {e.Description}"))); 
            }

            await JsRuntime.InvokeVoidAsync("alert", "Failed to add new role");
        }

        roles = await RoleService.GetAllRoles();
        newRoleName = "";
    }
}
