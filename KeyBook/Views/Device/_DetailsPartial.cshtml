@*
    Device Details
*@
@using KeyBook.ViewModels
@model Device
@{
    bool isNewDevice = Model == null || Model.Id == Guid.Empty; // Devices have no Id until committed to DB
}
<div>
    <label for="name">Device Name:</label>
</div>
<div>
    <input type="text" name="name" id="name" value="@Model?.Name" />
    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
</div>
<div>
    <label for="identifier">Device Identifier:</label>
</div>
<div>
    <input type="text" name="identifier" id="identifier" value="@Model?.Identifier" />
    @Html.ValidationMessageFor(model => model.Identifier, "", new { @class = "text-danger" })
</div>
@if (!isNewDevice)
{
    <div>
        <label for="defunctreason">Device Defunct Reason:</label>
    </div>
    <div>
        <select name="defunctreason" id="defunctreason" asp-for="@Model.DefunctReason">
            @* items filled by axios *@
        </select>
    </div>
}
<div>
    <label for="type">Device Type:</label>
</div>
<div>
    <select name="type" id="type" asp-for="@Model.Type" disabled="@(!isNewDevice)">
        @* items filled by axios *@
    </select>
</div>
<script>
    fillDropdown('select[name="type"]', '/Device/GetDeviceTypesAPI',
                 "@Model?.Type");
    fillDropdown('select[name="defunctreason"]',
                 '/Device/GetDeviceDefunctReasonAPI',
                 "@Model?.DefunctReason");

    async function fillDropdown(dropdownSelector, url, selectedValue) {
        try {
            let response = await axios({
                method: 'get',
                url: url
            });
            let dropdown = document.querySelector(dropdownSelector);
            for (optionId in response.data) {
                let option = document.createElement("option");
                option.value = optionId;
                option.innerText = response.data[optionId];
                if (response.data[optionId] === selectedValue) {
                    option.selected = true;
                }
                dropdown.appendChild(option);
            }
        } catch (error) {
            console.log(error);
        }
    }
</script>