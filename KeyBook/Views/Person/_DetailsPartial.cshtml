@*
    Person Details
*@
@using KeyBook.ViewModels
@model Person
@{
    bool isNewPerson = Model == null || Model.Id == Guid.Empty; // Persons have no Id until committed to DB
}
<div>
    <div>
        <label for="name">Person Name:</label>
    </div>
    <div>
        <input type="text" name="name" id="name" value="@Model?.Name" />
    </div>
    @if (!isNewPerson)
    {
        <div>
            <label for="isgone">Person Is Gone:</label>
        </div>
        <div>
            <input type="checkbox" value="true" name="isgone" id="name" checked="@Model?.IsGone" />
        </div>
    }
    <div>
        <label for="type">Person Type:</label>
    </div>
    <div>
        <select name="type" id="type" asp-for="@Model.Type" disabled="@(!isNewPerson)">
            @* items filled by axios *@
        </select>
    </div>
</div>
<script>
    axios({
        method: 'get',
        url: '/Person/GetPersonTypesAPI'
    }).then(response => {
        let typeSelect = document.querySelector('[name="type"]');
        let selectedType = "@Model?.Type";
        for (typeId in response.data) {
            let option = document.createElement("option");
            option.value = typeId;
            option.innerText = response.data[typeId];
            if (response.data[typeId] === selectedType) {
                option.selected = true;
            }
            typeSelect.appendChild(option);
        }
    }).catch(error => {
        console.log(error);
    })
</script>